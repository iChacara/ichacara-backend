datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int     @id @default(autoincrement())
  email          String  @unique
  password       String
  type           String
  profilePicture String?
  lessee         Lessee?
  lessor         Lessor?

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Notification Notification[]
  Event        Event[]
}

model Lessee {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Lessor {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Farm      Farm[]
}

model Farm {
  id           Int     @id @default(autoincrement())
  title        String?
  name         String?
  cep          String?
  street       String?
  number       String?
  complement   String?
  neighborhood String?
  city         String?
  state        String?
  numRooms     Int?
  numBeds      Int?
  numBathrooms Int?
  maxOccupancy Int?
  services     String?
  highlights   String?
  photos       String?
  dailyPrice   Float?
  lessorId     Int
  lessor       Lessor  @relation(fields: [lessorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notification {
  id        Int      @id @default(autoincrement())
  eventType String
  content   String
  isRead    Boolean  @default(false)
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id        Int      @id @default(autoincrement())
  userId    Int
  event     String
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
}
