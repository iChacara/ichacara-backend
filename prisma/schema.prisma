// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  password  String
  createdAt DateTime  @default(now())
  deletedAt DateTime?
  updatedAt DateTime?
  lessor    Lessor?
  lessee    Lessee?
}

model Lessor {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  deletedAt DateTime?
  updatedAt DateTime?
  Post      Post[]
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String    @unique
}

model Lessee {
  id          String        @id @default(uuid())
  createdAt   DateTime      @default(now())
  deletedAt   DateTime?
  updatedAt   DateTime?
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String        @unique
  Appointment Appointment[]
}

model Post {
  id               String        @id @default(uuid())
  title            String
  description      String
  routeInstruction String?
  number           String
  street           String
  district         String
  city             String
  UF               String
  CEP              String?
  complement       String?
  images           Json?
  createdAt        DateTime      @default(now())
  deletedAt        DateTime?
  updatedAt        DateTime?
  lessor           Lessor        @relation(fields: [lessorId], references: [id])
  status           String        @default("2")
  lessorId         String
  Appointment      Appointment[]
}

model Appointment {
  id            String    @id @default(uuid())
  startDate     DateTime
  endDate       DateTime
  type          String
  paymentStatus String?
  price         Float?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime?
  deletedAt     DateTime?

  postId   String
  lesseeId String

  post   Post   @relation(fields: [postId], references: [id])
  lessee Lessee @relation(fields: [lesseeId], references: [id])
}
